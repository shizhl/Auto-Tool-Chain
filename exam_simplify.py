import json
import tiktoken
encoder = tiktoken.encoding_for_model('gpt-3.5-turbo')

def normalize(sss):
    tmp = [
        '(/documentation/web-api/#spotify-uris-and-ids)',
        '(https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)',
        '(http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)',
        '(https://www.spotify.com/se/account/overview/)',
        '<br/>',
        '<br>',
        '\n',
        '/documentation/general/guides/track-relinking-guide/',
        '(http://en.wikipedia.org/wiki/Universal_Product_Code)',
        '(http://en.wikipedia.org/wiki/International_Standard_Recording_Code)',
        '/documentation/web-api/#spotify-uris-and-ids'
    ]
    for s in tmp:
        sss = sss.replace(s, '')
    return sss


def get_yaml(value, name, indent=0):
    result = ['\t' * indent + f"- {name}: {type(value).__name__}"]
    if list == type(value):
        element = f'{name}[0]'
        indent += 1
        if value != []:
            result.extend(get_yaml(value[0], element, indent))

    elif dict == type(value):
        for k, v in value.items():
            result.extend(get_yaml(v, k, indent + 1))
    return result


def simplify_json(raw_json: dict):
    if isinstance(raw_json, dict):
        for key in raw_json.keys():
            raw_json[key] = simplify_json(raw_json[key])
        return raw_json
    elif isinstance(raw_json, list):
        if len(raw_json) == 0:
            return raw_json
        # elif len(raw_json) == 1:
        #     return [simplify_json(raw_json[0])]
        else:
            return [simplify_json(raw_json[0])]
            # return [simplify_json(raw_json[0]), simplify_json(raw_json[1])]
    else:
        return type(raw_json).__name__

def simplify_dict(data):
    """
    Recursively simplify the dictionary by removing specific keys.

    :param data: The input dictionary to be simplified.
    :return: A simplified dictionary with specified keys removed.
    """
    keys_to_remove = ['example', 'nullable', 'x-spotify-docs-type','required']

    if isinstance(data, dict):
        results={}
        for k, v in data.items():
            if k in keys_to_remove:
                continue
            if k == 'description':
                results[k]=normalize(simplify_dict(v))
            else:
                results[k]=simplify_dict(v)
        return  results
    elif isinstance(data, list):
        return [simplify_dict(item) for item in data]
    else:
        return data


# Since the original dictionary was incomplete, I'll demonstrate the function using a smaller example.
# example_data = {
#     'key1': {
#         'example': 'value1',
#         'data': 'value2'
#     },
#     'key2': {
#         'nullable': 'value3',
#         'content': 'value4',
#         'nested': {
#             'x-spotify-docs-type': 'type1',
#             'detail': 'value5'
#         }
#     }
# }

# data={'previous': {'description': 'URL to the previous page of items. ( `None` if none)\n', 'example': 'https://api.spotify.com/v1/me/shows?offset=1&limit=1', 'nullable': 'true', 'type': 'string'}, 'items': {'items': {'properties': {'artists': {'description': 'The artists who performed the track. Each artist object includes a link in `href` to more detailed information about the artist.', 'items': {'properties': {'external_urls': {'properties': {'spotify': {'description': 'The [Spotify URL](/documentation/web-api/#spotify-uris-and-ids) for the object.\n', 'type': 'string'}}, 'required': [], 'type': 'object'}, 'href': {'description': 'A link to the Web API endpoint providing full details of the artist.\n', 'type': 'string'}, 'id': {'description': 'The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) for the artist.\n', 'type': 'string'}, 'name': {'description': 'The name of the artist.\n', 'type': 'string'}, 'type': {'description': 'The object type.\n', 'enum': ['artist'], 'type': 'string'}, 'uri': {'description': 'The [Spotify URI](/documentation/web-api/#spotify-uris-and-ids) for the artist.\n', 'type': 'string'}}, 'type': 'object', 'x-spotify-docs-type': 'SimplifiedArtistObject'}, 'type': 'array'}, 'available_markets': {'description': 'A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.\n', 'items': {'type': 'string'}, 'type': 'array'}, 'disc_number': {'description': 'The disc number (usually `1` unless the album consists of more than one disc).', 'type': 'integer'}, 'duration_ms': {'description': 'The track length in milliseconds.', 'type': 'integer'}, 'explicit': {'description': 'Whether or not the track has explicit lyrics ( `true` = yes it does; `False` = no it does not OR unknown).', 'type': 'boolean'}, 'external_urls': {'properties': {'spotify': {'description': 'The [Spotify URL](/documentation/web-api/#spotify-uris-and-ids) for the object.\n', 'type': 'string'}}, 'required': [], 'type': 'object'}, 'href': {'description': 'A link to the Web API endpoint providing full details of the track.', 'type': 'string'}, 'id': {'description': 'The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) for the track.\n', 'type': 'string'}, 'is_local': {'description': 'Whether or not the track is from a local file.\n', 'type': 'boolean'}, 'is_playable': {'description': 'Part of the response when [Track Relinking](/documentation/general/guides/track-relinking-guide/) is applied. If `true`, the track is playable in the given market. Otherwise `False`.\n', 'type': 'boolean'}, 'linked_from': {'properties': {'external_urls': {'properties': {'spotify': {'description': 'The [Spotify URL](/documentation/web-api/#spotify-uris-and-ids) for the object.\n', 'type': 'string'}}, 'required': [], 'type': 'object'}, 'href': {'description': 'A link to the Web API endpoint providing full details of the track.\n', 'type': 'string'}, 'id': {'description': 'The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) for the track.\n', 'type': 'string'}, 'type': {'description': 'The object type: "track".\n', 'type': 'string'}, 'uri': {'description': 'The [Spotify URI](/documentation/web-api/#spotify-uris-and-ids) for the track.\n', 'type': 'string'}}, 'required': [], 'type': 'object'}, 'name': {'description': 'The name of the track.', 'type': 'string'}, 'preview_url': {'description': 'A URL to a 30 second preview (MP3 format) of the track.\n', 'type': 'string', 'x-spotify-policy-list': [{}]}, 'restrictions': {'properties': {'reason': {'description': "The reason for the restriction. Supported values:\n- `market` - The content item is not available in the given market.\n- `product` - The content item is not available for the user's subscription type.\n- `explicit` - The content item is explicit and the user's account is set to not play explicit content.\n\nAdditional reasons may be added in the future.\n**Note**: If you use this field, make sure that your application safely handles unknown values.\n", 'type': 'string'}}, 'required': [], 'type': 'object'}, 'track_number': {'description': 'The number of the track. If an album has several discs, the track number is the number on the specified disc.\n', 'type': 'integer'}, 'type': {'description': 'The object type: "track".\n', 'type': 'string'}, 'uri': {'description': 'The [Spotify URI](/documentation/web-api/#spotify-uris-and-ids) for the track.\n', 'type': 'string'}}, 'type': 'object', 'x-spotify-docs-type': 'SimplifiedTrackObject'}, 'type': 'array'}}
#
# simplified_data = simplify_dict(data)
# print(json.dumps(simplified_data))

a={"page": 1, "results": [{"adult": False, "backdrop_path": "/vAJL2TUql8N1pgoz8SGt4JblaHi.jpg", "genre_ids": [18], "id": 46523, "origin_country": ["KR"], "original_language": "ko", "original_name": "\uc81c\uc911\uc6d0", "overview": "Jejoongwon is the first modern hospital in Korea established in the Joseon era in 1885. Baek Do Yang is a nobleman who gives up his status to enter its ranks. Hwang Jung is a butcher's son who becomes a physician, while Seok Ran enters Jejoongwon as an interpreter but takes on medical training to become a doctor.", "popularity": 12.481, "poster_path": "/xhSNQaDvvIHLXPY5LIqnw6HWawh.jpg", "first_air_date": "2010-01-04", "name": "Jejoongwon", "vote_average": 8.2, "vote_count": 4}, {"adult": False, "backdrop_path": "/bSwPHPdQlPjoqZGXLXjkO1Rjkje.jpg", "genre_ids": [35, 18], "id": 46550, "origin_country": ["KR"], "original_language": "ko", "original_name": "\uc774\uc6c3\uc9d1 \uaf43\ubbf8\ub0a8", "overview": "Go Dok Mi doesn't spend all day dreaming about her knight in shining armor \u2014 she\u2019s too busy spying on her neighbors who all happen to be hot, \"flower-boy\" types, including cartoon artist Oh Jin Rak. But when Enrique Geum, the new pretty boy next door, catches her, Dok Mi is finally forced to face the consequences - without the safety of binoculars and curtains. Will he be able to convince this \u201curban Rapunzel\u201d to let her hair down? Whether you\u2019re a lover or a fighter, this sensitive man will captivate your sensibilities.", "popularity": 44.947, "poster_path": "/qk6EWrC0vsW8umHikq33sBDFfst.jpg", "first_air_date": "2013-01-07", "name": "Flower Boy Next Door", "vote_average": 8.243, "vote_count": 114}, {"adult": False, "backdrop_path": "/qHnY8RyVM9BIctQKTUZNT8frDC.jpg", "genre_ids": [18, 10749], "id": 46552, "origin_country": ["KR"], "original_language": "ko", "original_name": "\uc81c3\ubcd1\uc6d0", "overview": "The 3rd Hospital is a 2012 South Korean medical drama, starring Kim Seung-woo, Oh Ji-ho, Kim Min-jung and Sooyoung of Girls' Generation. It centers on the conflicts between Western and Eastern medicine and the rivalry between two brothers who espouse them. It aired on cable channel tvN from September 5 to November 8, 2012 on Wednesdays and Thursdays at 21:55 for 20 episodes.", "popularity": 7.148, "poster_path": "/haVnTlw28kOUs3VAGQ2iEHUh63G.jpg", "first_air_date": "2012-09-05", "name": "The 3rd Hospital", "vote_average": 0.0, "vote_count": 0}, {"adult": False, "backdrop_path": "/rU36ztMT9kNw8LZGlO3DNoOqu2X.jpg", "genre_ids": [18], "id": 24, "origin_country": ["US"], "original_language": "en", "original_name": "Presidio Med", "overview": "Presidio Med is an American medical drama that aired on CBS from September 2002, to January 2003. The series centers on a San Francisco hospital. It was created by John Wells and Lydia Woodward, who also created ER.", "popularity": 28.277, "poster_path": "/dpsbrvlgr48nshG1MS8i2saaINQ.jpg", "first_air_date": "2002-09-24", "name": "Presidio Med", "vote_average": 8.0, "vote_count": 3}, {"adult": False, "backdrop_path": "/heotfhl53QuJw3YGfNFLhsfZs27.jpg", "genre_ids": [18], "id": 30, "origin_country": ["US"], "original_language": "en", "original_name": "St. Elsewhere", "overview": "St. Elsewhere is an American medical drama television series that originally ran on NBC from October 26, 1982 to May 25, 1988. The series starred Ed Flanders, Norman Lloyd and William Daniels as teaching doctors at a lightly-regarded Boston hospital who gave interns a promising future in making critical medical and life decisions.", "popularity": 119.0, "poster_path": "/mEfcA56iisaOfnK8FsY1sSE2wLu.jpg", "first_air_date": "1982-10-26", "name": "St. Elsewhere", "vote_average": 5.426, "vote_count": 74}, {"adult": False, "backdrop_path": "/lVOxlGicdNzGEk2JgyAtP54t9Mr.jpg", "genre_ids": [18], "id": 72380, "origin_country": ["AU"], "original_language": "en", "original_name": "Pulse", "overview": "When successful high-flier Frankie Bell is brought crashing to earth by chronic kidney failure she targets an alternate future. Eight years on she is in her second year as a practicing doctor starting her first day in a Renal rotation. Driven to use her second chance to save others, Frankie must confront an ailing health system, and face her toughest challenge - learning to let go.", "popularity": 24.063, "poster_path": "/apFmO4sqH5IaC5VwLQMehdNdBkx.jpg", "first_air_date": "2017-07-20", "name": "Pulse", "vote_average": 5.8, "vote_count": 12}, {"adult": False, "backdrop_path": None, "genre_ids": [18], "id": 26635, "origin_country": ["GB"], "original_language": "en", "original_name": "Life Support", "overview": "Life Support is a medical drama series that aired on BBC Scotland. Aisling O'Sullivan starred as Dr. Katherine Doone, the new clinical ethicist at Caledonian Hospital Trust, a fictional Glasgow hospital.", "popularity": 3.644, "poster_path": None, "first_air_date": "1999-07-19", "name": "Life Support", "vote_average": 0.0, "vote_count": 0}, {"adult": False, "backdrop_path": "/xB4pfMKtPNAKZPDDjtxSZPu54m8.jpg", "genre_ids": [35, 18], "id": 128995, "origin_country": ["KR"], "original_language": "ko", "original_name": "\uc720\ubbf8\uc758 \uc138\ud3ec\ub4e4", "overview": "Yumi is a 30-year old, ordinary woman who struggles with expressing her feelings. Told from the perspective of the many brain cells in her head, she experiences growth in both her love life, her career, and finds happiness in the small joys of everyday life.", "popularity": 32.253, "poster_path": "/yzGZ8ALwiAKdGQCJZlvtpgInl6Z.jpg", "first_air_date": "2021-09-17", "name": "Yumi's Cells", "vote_average": 7.338, "vote_count": 34}, {"adult": False, "backdrop_path": "/irlVNb7MmDI5GJ9Ri0GHYmWCwdM.jpg", "genre_ids": [18], "id": 2371, "origin_country": ["GB"], "original_language": "en", "original_name": "Bodies", "overview": "Bodies is an award-winning British television medical drama produced by Hat Trick Productions for the BBC. Created by Jed Mercurio, the series began in 2004 and is based on his book Bodies. In December 2009, The Times ranked Bodies in 9th place in its list of \"Shows of the Decade\". The Guardian has ranked the series among \"The Greatest Television Dramas of All-Time\".", "popularity": 16.884, "poster_path": "/7sDRMbZC5zvbE4UMjm9cw7KSj9u.jpg", "first_air_date": "2004-06-23", "name": "Bodies", "vote_average": 6.571, "vote_count": 7}, {"adult": False, "backdrop_path": "/uW8S2gIk9xrP7Af0tHOb6rI9U6b.jpg", "genre_ids": [35, 18], "id": 2430, "origin_country": ["GB", "FR"], "original_language": "en", "original_name": "Doc Martin", "overview": "Doc Martin is a British television comedy drama series starring Martin Clunes in the title role. It was created by Dominic Minghella after the character of Dr. Martin Bamford in the 2000 comedy film Saving Grace. The show is set in the fictional seaside village of Portwenn and filmed on location in the village of Port Isaac, Cornwall, England, with most interior scenes shot in a converted local barn. Five series aired between 2004 and 2011, together with a feature-length special that aired on Christmas Day 2006. Series 6 began airing on ITV on 2 September 2013.", "popularity": 101.812, "poster_path": "/gNo0wunjGXpGMNA4ohsj2FkfUBV.jpg", "first_air_date": "2004-09-02", "name": "Doc Martin", "vote_average": 8.2, "vote_count": 105}, {"adult": False, "backdrop_path": "/9pNGM3ajNviymrqHgWzrj77VVMV.jpg", "genre_ids": [18], "id": 128844, "origin_country": ["CN"], "original_language": "zh", "original_name": "\u8861\u5c71\u533b\u9662", "overview": "The drama takes place in republican era China in Hengshan Hospital, centered primarily on the conflict between the Communist Party and the KMT in 1930s Shanghai. Ma Tian Ming is a faithless, greedy, and selfish man who makes his living by cheating and lying. A coincidental accident drags Ma Tian Ming into a case in which he becomes the suspect. Trying to escape, he impersonated the chief doctor of Hengshan Hospital, Cai Li Kun. However, Ma Tian Ming soon found out that Cai Li Kun is a member of the underground Communist Party.", "popularity": 16.948, "poster_path": "/aswNIFBMiddhggeIHhAczo43HzA.jpg", "first_air_date": "2021-07-08", "name": "Hengshan Hospital", "vote_average": 2.0, "vote_count": 1}, {"adult": False, "backdrop_path": "/pkoYXabVyrOI5zEm1LnrtLx2mAh.jpg", "genre_ids": [18], "id": 203698, "origin_country": ["KR"], "original_language": "ko", "original_name": "\ub300\ud589\uc0ac", "overview": "A self-made executive navigates the cutthroat world of advertising, stopping at nothing \u2014 no matter how calculating \u2014 to become the head of her agency.", "popularity": 42.355, "poster_path": "/hOIkLHsYzqWnd2EtS4YhItYJzKx.jpg", "first_air_date": "2023-01-07", "name": "Agency", "vote_average": 8.071, "vote_count": 14}, {"adult": False, "backdrop_path": "/k4XKN4VqnzwClWeIJbuHQYpKsDA.jpg", "genre_ids": [18, 10751], "id": 203706, "origin_country": ["TH"], "original_language": "th", "original_name": "\u0e1b\u0e21\u0e40\u0e2a\u0e19\u0e48\u0e2b\u0e32", "overview": "Parichat became pregnant before discovering that her partner, Trin, was already married. After forcibly having the child aborted, he abandons her. Parichat is left alone and suicidal until her sister and brother-in-law offer to help her plot revenge. The plan requires years of studying abroad, after which Parichat returns and begins slowly approaching Trin. As she creeps toward her vengance, Trin\u2019s wife\u2019s cousin, Payu, tries to protect his family by impeding her.", "popularity": 15.051, "poster_path": "/voeTbrLyiPlBi1VN7JltnPXS49x.jpg", "first_air_date": "2022-04-06", "name": "Poisonous Passion", "vote_average": 0.0, "vote_count": 0}, {"adult": False, "backdrop_path": None, "genre_ids": [18], "id": 50231, "origin_country": ["TR"], "original_language": "tr", "original_name": "Merhaba Hayat", "overview": "Merhaba Hayat is a Turkish series broadcast on Fox. It is a licensed adaptation of Private Practice and jointly produced by Med Yap\u0131m Productions. Ended February 13, 2013.", "popularity": 7.732, "poster_path": "/yKLrxnG0N0R1CHo3kE2UTEGkNBm.jpg", "first_air_date": "2012-10-09", "name": "Merhaba Hayat", "vote_average": 0.0, "vote_count": 0}, {"adult": False, "backdrop_path": "/2qPiys3D9GYXsk00Ra1hVUNLbL9.jpg", "genre_ids": [18, 10751], "id": 101710, "origin_country": ["JP"], "original_language": "ja", "original_name": "\u5fc3\u306e\u50b7\u3092\u7652\u3059\u3068\u3044\u3046\u3053\u3068", "overview": "An Kazutaka is a young, bashful psychiatrist whose jazz piano skills are as good as a pro. Right after they have their first child, the Great Hanshin Earthquake strikes. Although his family is affected by the disaster, he begins to search for what he can do as a psychiatrist. As he listens to the stories of disaster victims, he realises that he can help not by treating them, but restoring their capacity to heal. Later on, he compiles his observations of the disaster-hit area as a psychiatrist into a book and wins a prize for social sciences.", "popularity": 19.07, "poster_path": "/f6xjmg9EsnxAlBdLEalezT78p0l.jpg", "first_air_date": "2020-01-18", "name": "To Heal the Heart", "vote_average": 0.0, "vote_count": 0}, {"adult": False, "backdrop_path": "/jIXDWBeCUEu0ttzjHBJC4sA8LzR.jpg", "genre_ids": [18, 35], "id": 1750, "origin_country": ["US"], "original_language": "en", "original_name": "Doogie Howser, M.D.", "overview": "Doogie Howser is a doctor. He is also a 16-year-old genius who graduated college at age 10 and finished medical school at age 14. But he is still a teenager, with normal teenage friends and problems. But unlike a normal teenager, he is just learning to drive while also consulting on serious medical cases like heart transplants.", "popularity": 77.53, "poster_path": "/uNGrGq7tJ1GiKUsfnchC07l0Q2M.jpg", "first_air_date": "1989-09-19", "name": "Doogie Howser, M.D.", "vote_average": 6.602, "vote_count": 93}, {"adult": False, "backdrop_path": "/cQsSW2uuh802aVCJx5HR9Y9FovX.jpg", "genre_ids": [18, 10768], "id": 2294, "origin_country": ["US"], "original_language": "en", "original_name": "China Beach", "overview": "Dateline: November 1967. Within klicks of Danang, Vietnam, sits a U.S. Army base, bar and hospital on China Beach filled with wounded soldiers and one very lovely but damaged Army Nurse Colleen McMurphy. Many heroes, dead and alive, try to make sense of life and death in between bourbon, bullets and battles.", "popularity": 44.534, "poster_path": "/hAHjHqh9b31xljMxSc6PBet3a1X.jpg", "first_air_date": "1988-04-26", "name": "China Beach", "vote_average": 7.25, "vote_count": 26}, {"adult": False, "backdrop_path": "/63uJPZFIJJ9SXvncrQqgkexmH4X.jpg", "genre_ids": [18, 35], "id": 2305, "origin_country": ["GB"], "original_language": "en", "original_name": "A Very Peculiar Practice", "overview": "A young and idealistic Doctor Stephen Daker arrives at Lowlands University to work at the Health Centre, but has to cope with an eccentric set of colleagues.", "popularity": 24.157, "poster_path": "/qQlHuzlQCqT5uSlf0NOeFPGl2ko.jpg", "first_air_date": "1986-05-21", "name": "A Very Peculiar Practice", "vote_average": 7.5, "vote_count": 4}, {"adult": False, "backdrop_path": "/hmTqTRhtszSiAXRZMqh4ZFCVlso.jpg", "genre_ids": [18], "id": 2054, "origin_country": ["GB"], "original_language": "en", "original_name": "The Royal", "overview": "Follows the staff and patients of a Yorkshire cottage hospital in the 60s, embroiled in tangled love lives and bitter power struggles.", "popularity": 5.302, "poster_path": "/x4YxZeQ7pGmaJVLzIQ784nzqDgX.jpg", "first_air_date": "2003-01-19", "name": "The Royal", "vote_average": 7.875, "vote_count": 8}, {"adult": False, "backdrop_path": "/9tYSEovniAwcV7bKfWtlq9uD84w.jpg", "genre_ids": [18], "id": 2167, "origin_country": ["AU"], "original_language": "en", "original_name": "All Saints", "overview": "Medical drama focusing on the working and personal lives of the doctors and nurses working on the front line of a busy inner city Emergency Department at All Saints Hospital.", "popularity": 81.347, "poster_path": "/cuKUm2nweOCpb1pl2k8k0THTBvn.jpg", "first_air_date": "1998-02-24", "name": "All Saints", "vote_average": 6.2, "vote_count": 9}], "total_pages": 1791, "total_results": 35807}
print(len(encoder.encode(str(a))))
print(a)
b=simplify_json(a)
print(len(encoder.encode(str(b))))
print(b)

tree_struct = '\n'.join(get_yaml(a, 'response'))
print(len(encoder.encode(str(tree_struct))))
print(tree_struct)
